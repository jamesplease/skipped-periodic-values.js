{"version":3,"sources":["skipped-periodic-values.js"],"names":[],"mappings":"WAAU,IAAI,EAAE,OAAO,EAAE;AACvB;AACE;;AAEA;AACA;;AAEA;;EAEH,iBAAiB,oBAAoB,EAAE;AACtC;;8BAIA,UAA+B,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7D,QAAI,OAAO,GAAG,oBAAoB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;;;AAIzD,QAAI,OAAO,GAAG,KAAK,GAAG,CAAC,IAAI,OAAO,KAAK,KAAK,EAAE;AAC5C,aAAO,GAAG,OAAO,GAAG,MAAM,CAAC;KAC5B;;;AAGD,QAAI,OAAO,GAAG,KAAK,GAAG,QAAQ,EAAE;AAC9B,aAAO,CAAC,CAAC;KACV,MAEI;;;AAGH,aAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,QAAQ,GAAC,OAAO,CAAA,IAAK,MAAM,GAAC,CAAC,CAAA,AAAC,CAAC,CAAC;KACtD;GACF;;;;;AAKD,SAAO,qBAAqB,CAAC;CAC9B,CAAC,CAAC","file":"skipped-periodic-values.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['nearest-periodic-value'], factory);\n  } else if (typeof exports !== 'undefined') {\n    var nearestPeriodicValue = require('nearest-periodic-value');\n    module.exports = factory(nearestPeriodicValue);\n  } else {\n    root.skippedPeriodicValues = factory(root.nearestPeriodicValue);\n  }\n})(this, function(nearestPeriodicValue) {\n  'use strict';\n\n  import nearestPeriodicValue from 'nearest-periodic-value';\n  \n  function skippedPeriodicValues(start, distance, value, period) {\n    var nearest = nearestPeriodicValue(start, value, period);\n  \n    // If our nearest value is behind the start, or is the start,\n    // then push it to the next value\n    if (nearest - start < 0 || nearest === start) {\n      nearest = nearest + period;\n    }\n  \n    // No values were skipped if the nearest is shorter than the distance\n    if (nearest - start > distance) {\n      return 0;\n    }\n  \n    else {\n      // Determine how many 'skipped intervals' there were. Skipped intervals can be\n      // thought of a period-1 function, as they do not contribute to the total value.\n      return 1 + parseInt((distance-nearest) / (period-1));\n    }\n  }\n  \n  export default skippedPeriodicValues;\n  \n  \n  return skippedPeriodicValues;\n});\n"],"sourceRoot":"/source/"}